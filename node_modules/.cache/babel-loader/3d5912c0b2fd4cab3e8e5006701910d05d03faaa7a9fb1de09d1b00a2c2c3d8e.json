{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\avaltree_react_final\\\\react-tailwind-starter\\\\src\\\\components\\\\StripeCheckout.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StripeCheckout = ({\n  onPurchase,\n  isIssued,\n  price = 1,\n  userId,\n  title\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleStripeCheckout = async () => {\n    setIsLoading(true);\n    try {\n      // Check if Stripe is configured\n      const stripeKey = process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY;\n      if (!stripeKey || stripeKey === 'pk_test_your_stripe_publishable_key_here') {\n        // Demo mode - simulate checkout process\n        console.log('Demo mode: Simulating Stripe checkout...');\n\n        // Simulate successful payment\n        setTimeout(async () => {\n          onPurchase();\n          setIsLoading(false);\n\n          // Small delay to ensure raffle ticket is added\n          await new Promise(resolve => setTimeout(resolve, 500));\n\n          // Navigate to success page with demo parameters\n          navigate(`/success?session_id=demo_${Math.random().toString(36).substr(2, 9)}&userId=${userId}`);\n        }, 2000);\n        return;\n      }\n\n      // Real Stripe integration\n      const stripe = await loadStripe(stripeKey);\n\n      // Create checkout session via server\n      const response = await fetch('http://localhost:3001/api/create-checkout-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          price: price * 100,\n          // Convert to cents\n          userId: userId,\n          isIssued: isIssued,\n          title: title\n        })\n      });\n      const session = await response.json();\n      if (session.error) {\n        console.error('Error creating checkout session:', session.error);\n        setIsLoading(false);\n        return;\n      }\n\n      // Redirect to Stripe Checkout\n      const result = await stripe.redirectToCheckout({\n        sessionId: session.id\n      });\n      if (result.error) {\n        console.error('Error redirecting to checkout:', result.error);\n        alert('Error redirecting to checkout. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error during checkout:', error);\n      alert('Error during checkout. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleStripeCheckout,\n    disabled: isLoading,\n    className: `w-full font-body font-semibold py-3 px-6 rounded-lg transition-all duration-200 hover:shadow-lg transform hover:scale-105 ${isLoading ? \"bg-gray-400 cursor-not-allowed\" : \"bg-black  text-white\"}`,\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), \"Processing...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : `${isIssued ? \"Create Now\" : \"Buy Now\"} - €${price}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(StripeCheckout, \"3u+0t5V4Ln/38WeeqvT8WzLDK14=\", false, function () {\n  return [useNavigate];\n});\n_c = StripeCheckout;\nexport default StripeCheckout;\nvar _c;\n$RefreshReg$(_c, \"StripeCheckout\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useNavigate","loadStripe","jsxDEV","_jsxDEV","StripeCheckout","onPurchase","isIssued","price","userId","title","isLoading","setIsLoading","navigate","handleStripeCheckout","stripeKey","process","env","REACT_APP_STRIPE_PUBLISHABLE_KEY","console","log","setTimeout","Promise","resolve","Math","random","toString","substr","stripe","response","fetch","method","headers","body","JSON","stringify","session","json","error","result","redirectToCheckout","sessionId","id","alert","onClick","disabled","className","children","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/avaltree_react_final/react-tailwind-starter/src/components/StripeCheckout.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { loadStripe } from \"@stripe/stripe-js\"\n\nconst StripeCheckout = ({ onPurchase, isIssued, price = 1, userId, title }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const navigate = useNavigate()\n\n  const handleStripeCheckout = async () => {\n    setIsLoading(true)\n\n    try {\n      // Check if Stripe is configured\n      const stripeKey = process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY\n      \n      if (!stripeKey || stripeKey === 'pk_test_your_stripe_publishable_key_here') {\n        // Demo mode - simulate checkout process\n        console.log('Demo mode: Simulating Stripe checkout...')\n        \n        // Simulate successful payment\n        setTimeout(async () => {\n          onPurchase()\n          setIsLoading(false)\n          \n          // Small delay to ensure raffle ticket is added\n          await new Promise(resolve => setTimeout(resolve, 500))\n          \n          // Navigate to success page with demo parameters\n          navigate(`/success?session_id=demo_${Math.random().toString(36).substr(2, 9)}&userId=${userId}`)\n        }, 2000)\n\n        return\n      }\n\n      // Real Stripe integration\n      const stripe = await loadStripe(stripeKey)\n\n      // Create checkout session via server\n      const response = await fetch('http://localhost:3001/api/create-checkout-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          price: price * 100, // Convert to cents\n          userId: userId,\n          isIssued: isIssued,\n          title: title\n        }),\n      })\n\n      const session = await response.json()\n\n      if (session.error) {\n        console.error('Error creating checkout session:', session.error)\n        setIsLoading(false)\n        return\n      }\n\n      // Redirect to Stripe Checkout\n      const result = await stripe.redirectToCheckout({\n        sessionId: session.id,\n      })\n\n      if (result.error) {\n        console.error('Error redirecting to checkout:', result.error)\n        alert('Error redirecting to checkout. Please try again.')\n      }\n    } catch (error) {\n      console.error('Error during checkout:', error)\n      alert('Error during checkout. Please try again.')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <button\n      onClick={handleStripeCheckout}\n      disabled={isLoading}\n      className={`w-full font-body font-semibold py-3 px-6 rounded-lg transition-all duration-200 hover:shadow-lg transform hover:scale-105 ${\n        isLoading ? \"bg-gray-400 cursor-not-allowed\" : \"bg-black  text-white\"\n      }`}\n    >\n      {isLoading ? (\n        <div className=\"flex items-center justify-center\">\n          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n          Processing...\n        </div>\n      ) : (\n        `${isIssued ? \"Create Now\" : \"Buy Now\"} - €${price}`\n      )}\n    </button>\n  )\n}\n\nexport default StripeCheckout "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}